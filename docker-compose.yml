version: '3.1'

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - '5432'
    networks:
      - backend_network
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

  backend:
    container_name: backend
    build: 
      context: backend
    image: backend
    environment:
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_USER: "${DB_USER}"
      DB_NAME: "${DB_NAME}"
      DB_PORT: "${DB_PORT}"
      DB_HOST: "${DB_HOST}"
    command: npm run start:dev
    expose:
      - 3000
    networks:
      - backend_network
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    build: 
      context: frontend
    image: frontend
    environment:
      API_PORT: "${API_PORT}"
      API_HOST: "${API_HOST}"
    command: npm run start
    expose:
      - 4200
    networks:
      - frontend_network
    volumes:
      - ./frontend:/usr/src/app

  nginx:
    container_name: nginx
    image: nginx
    restart: always
    volumes:
      - ./nginx/cert.crt:/etc/nginx/cert.crt
      - ./nginx/cert.key:/etc/nginx/cert.key
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '8080:80'
      - '8081:443'
    networks:
      - frontend_network
      - backend_network
    depends_on:
      - backend
      - frontend

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

# https://www.digitalocean.com/community/tutorials/nginx-reverse-proxy-node-angular
